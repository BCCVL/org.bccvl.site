[transmogrifier]
pipeline =
    source
    constructor
    deserializer
    attributefromfile
    schemaupdater
    filemetadatabccvl
    bccvlmetadata
    mimetype
#    owner
#    order
    permissionmapping
    localroles
    selectableconstraintype
    workflowupdater
    browserdefault
    reindexobject
    savepoint


[source]
# generate items fro json files on file system
blueprint = gu.transmogrifier.jsonsource
# path needs to given via transmogrifier call
# path = org.bccvl.site:data

[constructor]
# create content if necessary
blueprint = collective.transmogrifier.sections.constructor

[deserializer]
# deserialize content to dexterity data according to schema
blueprint = transmogrify.dexterity.deserializer

[attributefromfile]
# loads attribute content from files
blueprint = gu.transmogrifier.attributefromfile

[schemaupdater]
# update data on content
blueprint = transmogrify.dexterity.schemaupdater

[filemetadatabccvl]
# convert filemetadata to bccvl metadata
blueprint = org.bccvl.site.transmogrify.filemetadatabccvl

[bccvlmetadata]
# update bccvlmetadata
blueprint = org.bccvl.site.transmogrify.bccvlmetadata

[mimetype]
# set mimetype on content object itself (obj.setFormat(_content_type))
blueprint = collective.jsonmigrator.mimetype
# _content_type = ...
# TODO: content type should probably be extracted in filemetadata
#       would item['format'] work as well?
#       separate setter could be helpful in ordering pipeline

# TODO: doesn't yield in case it finds that the current object is not AT
[owner]
# set owner
blueprint = collective.jsonmigrator.owner
# _owner = .... in json

# TODO: doesn't support ordering on Portal object. (OFS.interfaces.IOrderedContainer, Products.CMFPlone.PloneFolder.OrderedContainer)
[order]
blueprint = collective.jsonmigrator.order

[permissionmapping]
# TODO: isn't this the same as rolemap.xml?
blueprint = collective.jsonmigrator.permissions
# _permissions = {perm: {'roles':[],'acquire':}}

[localroles]
# manage local roles
blueprint = collective.jsonmigrator.local_roles
#ac_local_roles = {'principal': [roles]}... in josn

[selectableconstraintype]
# configure selectableconstraintypes
blueprint = gu.transmogrifier.selectableconstraintypes

[workflowupdater]
# run workflow transitions
blueprint = plone.app.transmogrifier.workflowupdater

[browserdefault]
# setLayout and/or setDefaultPage
blueprint = plone.app.transmogrifier.browserdefault

[reindexobject]
blueprint = plone.app.transmogrifier.reindexobject

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 3
