<configure
        xmlns="http://namespaces.zope.org/zope"
        xmlns:plone="http://namespaces.plone.org/plone"
        xmlns:transmogrifier="http://namespaces.plone.org/transmogrifier"
        xmlns:cmf="http://namespaces.zope.org/cmf"
       xmlns:i18n="http://namespaces.zope.org/i18n"
        i18n_domain="org.bccvl"
        >

    <i18n:registerTranslations directory="locales" />

    <includeDependencies package="."/>
    <include file="permissions.zcml"/>
    <include file="profiles.zcml"/>
    <include package=".content"/>
    <include package=".browser"/>

    <cmf:registerDirectory name="bccvl_skin" />

    <adapter
        for="zope.interface.Interface
             plone.app.z3cform.interfaces.IPloneFormLayer
             z3c.form.interfaces.IAddForm"
        factory=".utilities.RDFTypeMapper"
    />

    <utility
        factory=".utilities.RDFDataMapper"
        name="Content data to RDF Mapper"
    />

    <utility
        factory=".utilities.RDFContentBasedTypeMapper"
        name="Content type to RDF type Mapper"
    />


    <utility
        factory=".UserAdder"
        provides="Products.membrane.interfaces.IUserAdder"
        name="BCCVL User Adder"
    />

    <!--<adapter-->
        <!--for="Products.CMFCore.interfaces.IFolderish-->
             <!--Products.CMFDefault.interfaces.ICMFDefaultSkin-->
             <!--plone.dexterity.interfaces.IDexterityFTI"-->
        <!--name="gu.repository.content.RepositoryItem"-->
        <!--provides="zope.publisher.interfaces.browser.IBrowserPage"-->
        <!--factory="org.bccvl.site.browser.add.TypeFromRequestAddView"       -->
    <!--/> -->
    <!--<class class="org.bccvl.site.browser.add.TypeFromRequestAddView">-->
        <!--<require-->
            <!--permission="cmf.AddPortalContent"-->
            <!--interface="zope.publisher.interfaces.browser.IBrowserPage"-->
        <!--/>-->
    <!--</class>-->

    <!-- make all dexterity based content geo-locatable with collective.geo.* -->
    <class class="plone.dexterity.content.DexterityContent">
        <implements interface="collective.geo.geographer.interfaces.IGeoreferenceable"/>
    </class>

    <!-- download info adapters -->
    <adapter
        factory=".utilities.DatasetDownloadInfo"
        />

    <adapter
        factory=".utilities.RemoteDatasetDownloadInfo"
        />

    <!-- index relevant RDF properties -->
    <adapter
        factory=".indexers.dataset_BCCDataGenre"
        name="BCCDataGenre"
    />

    <adapter
        factory=".indexers.dataset_BCCSpeciesLayer"
        name="BCCSpeciesLayer"
    />

    <adapter
        factory=".indexers.dataset_environmental_layer"
        name="BCCEnviroLayer"
    />

    <adapter
        factory=".indexers.dataset_BCCEmissionScenario"
        name="BCCEmissionScenario"
    />

    <adapter
        factory=".indexers.dataset_BCCGlobalClimateModel"
        name="BCCGlobalClimateModel"
    />

    <adapter
        factory=".indexers.BCCDatasetResolution"
        name="BCCResolution"
        />

    <adapter
        factory=".indexers.BCCExperimentResolution"
        name="BCCResolution"
        />

    <adapter
        for=".content.interfaces.IExperiment
             Products.ZCatalog.interfaces.IZCatalog"
        factory=".indexers.JobStateIndexer"
        name="job_state"
        />

    <adapter
        for=".content.interfaces.IDataset
             Products.ZCatalog.interfaces.IZCatalog"
        factory=".indexers.JobStateIndexer"
        name="job_state"
        />

    <adapter
        for="gu.repository.content.interfaces.IRepositoryItem
             Products.ZCatalog.interfaces.IZCatalog"
        factory=".indexers.JobStateIndexer"
        name="job_state"
        />


    <!-- TODO: index temporal coverage someday -->
    <!-- <adapter -->
    <!--     factory=".indexers.dataset_DCTemporal" -->
    <!--     name="DCTemporal" -->
    <!-- /> -->

    <adapter
        for="gu.repository.content.interfaces.IRepositoryItem"
        factory=".utilities.JobTracker" />


    <adapter
        factory=".utilities.SDMJobTracker"/>

    <adapter
        factory=".utilities.ProjectionJobTracker"/>

    <adapter
        factory=".utilities.BiodiverseJobTracker"/>

    <adapter
        factory=".utilities.FunctionalResponseJobTracker"/>

    <adapter
        factory=".utilities.EnsembleJobTracker"/>

    <adapter
        factory=".utilities.ALAJobTracker"/>

  <utility
     component=".transmogrify.ALASource"
     name="org.bccvl.site.transmogrify.alasource"
     />

  <utility
     component=".transmogrify.RDFMetadataUpdater"
     name="org.bccvl.site.transmogrify.rdfmetadata"
     />

    <utility
      component=".vocabularies.species_presence_datasets_source"
      name="species_presence_datasets_source"
    />

    <utility
      component=".vocabularies.species_absence_datasets_source"
      name="species_absence_datasets_source"
    />

    <utility
      component=".vocabularies.species_abundance_datasets_source"
      name="species_abundance_datasets_source"
    />

    <utility
      component=".vocabularies.environmental_datasets_source"
      name="environmental_datasets_source"
    />

    <utility
      component=".vocabularies.future_climate_datasets_source"
      name="future_climate_datasets_source"
    />

    <utility
      component=".vocabularies.functions_source"
      name="functions_source"
    />

    <utility
      component=".vocabularies.envirolayer_source"
      name="envirolayer_source"
    />

    <utility
      component=".vocabularies.programming_language_vocab_factory"
      name="org.bccvl.site.programming_language_vocab"
      />

    <utility
        name="org.bccvl.site.GCMVocabulary"
        component=".vocabularies.GCMVocabularyFactory"
        />

    <utility
        name="org.bccvl.site.EMSCVocabulary"
        component=".vocabularies.EMSCVocabularyFactory"
        />

    <utility
        name="org.bccvl.site.BioclimVocabulary"
        component=".vocabularies.BioclimVocabularyFactory"
        />

    <utility
        name="org.bccvl.site.SpeciesDataGenreVocabulary"
        component=".vocabularies.SpeciesDataGenreVocabularyFactory"
    />

    <utility
        name="org.bccvl.site.SpeciesLayerVocabulary"
        component=".vocabularies.SpeciesLayerVocabularyFactory"
    />

    <utility
        name="org.bccvl.site.EnvironmentalDataGenreVocabulary"
        component=".vocabularies.EnvironmentalDataGenreVocabularyFactory"
    />

    <utility
        name="org.bccvl.site.DatasetTypeVocabulary"
        component=".vocabularies.DatasetTypeVocabularyFactory"
    />

    <utility
        name="org.bccvl.site.ResolutionVocabulary"
        component=".vocabularies.ResolutionVocabularyFactory"
    />

    <transmogrifier:registerConfig
        name="exportknowledgebase"
        title="Export Knowledgebase pipeline configuration"
        description="This exports BCCVL Knowledge base section."
        configuration="exportknowledgebase.cfg"
        />

    <transmogrifier:registerConfig
        name="importknowledgebase"
        title="Import Knowledgebase pipeline configuration"
        description="This imports BCCVL Knowledge base section."
        configuration="importknowledgbase.cfg"
        />

    <transmogrifier:registerConfig
      name="org.bccvl.site.dataimport"
      title="Import data"
      description="Import data structure"
      configuration="dataimport.cfg"
      />

    <transmogrifier:registerConfig
      name="org.bccvl.site.alaimport"
      title="Import ALA data"
      description="Import data form ALA put onto filesystem"
      configuration="import_ala.cfg"
      />

</configure>
